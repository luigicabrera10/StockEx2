import { useAccount, useApi, useAlert } from "@gear-js/react-hooks";
import { web3Enable, web3FromSource } from "@polkadot/extension-dapp";
import { ProgramMetadata } from "@gear-js/api";
import { Flex, Button } from "@chakra-ui/react";

type CloseOperationProps = {
    id: number;
    close_price: number;
    vara_factor: number;
    isDisable: boolean
};

function CloseOperation({
    id,
    close_price,
    vara_factor,
    isDisable,
}: CloseOperationProps) {
    const decimalConst = Math.pow(10, 12);

    const alert = useAlert();
    const { account } = useAccount();
    const { api, isApiReady } = useApi();

    const programID: `0x${string}` = "0x99b2c1b5b30f904a05e4d233b5a8cb058a140e4869c2ab9ede608053be33e121";

    const meta = "0002000100000000000104000000010b00000000000000010e000000010f0000007d1a48000808696f28496e697453747275637400000401146f776e657204011c4163746f72496400000410106773746418636f6d6d6f6e287072696d6974697665731c4163746f724964000004000801205b75383b2033325d000008000003200000000c000c0000050300100808696f1c416374696f6e73000110344f70656e4f7065726174696f6e04001401484f70656e4f7065726174696f6e496e70757400000038436c6f73654f7065726174696f6e040024014c436c6f73654f7065726174696f6e496e70757400010048536574537570706f7274656453746f636b73040028012c5665633c537472696e673e000200504465706f736974466f756e6473546f4f776e657200030000140808696f484f70656e4f7065726174696f6e496e70757400001801347469636b65725f73796d626f6c180118537472696e670001386f7065726174696f6e5f747970651c0110626f6f6c000128696e766573746d656e74200110753132380001286f70656e5f7072696365200110753132380001206c657665726167652001107531323800011064617465180118537472696e6700001800000502001c0000050000200000050700240808696f4c436c6f73654f7065726174696f6e496e70757400001001306f7065726174696f6e5f69642001107531323800011064617465180118537472696e6700012c636c6f73655f70726963652001107531323800012c766172615f666163746f722001107531323800002800000218002c0418526573756c740804540130044501340108084f6b040030000000000c4572720400340000010000300808696f184576656e7473000110404f7065726174696f6e437265617465640c010869642001107531323800015466696e616c5f766172615f696e766573746d656e7420011075313238000138766172615f636f6d697373696f6e200110753132380000003c4f7065726174696f6e436c6f736564080158766172615f696e766573746d656e745f72657475726e2001107531323800015c646f6c61725f696e766573746d656e745f72657475726e2001107531323800010078537570706f7274656453746f636b735365745375636365737366756c6c790002006846756e74734465706f73697465645375636365737366756c6c7908011466756e64732001107531323800011c6163636f756e7404011c4163746f72496400030000340808696f184572726f7273000118444e6f74537570706f7274656453746f636b04011473746f636b180118537472696e67000000504f7065726174696f6e446f65736e7445786973740401086964200110753132380001006c55736572446f65736e7448617665416e794f7065726174696f6e730401107573657204011c4163746f72496400020070556e617574686f72697a6564546f436c6f73654f7065726174696f6e040108696420011075313238000300584f7065726174696f6e416c7265616479436c6f73656404010869642001107531323800040048556e617574686f72697a6564416374696f6e00050000380808696f14517565727900011434416c6c4f7065726174696f6e73040004011c4163746f724964000000404163746976654f7065726174696f6e73040004011c4163746f72496400010040436c6f7365644f7065726174696f6e73040004011c4163746f7249640002003c537570706f7274656453746f636b7300030038436f6c6c656374656446756e6473000400003c0808696f2851756572795265706c7900011434416c6c4f7065726174696f6e7304004001385665633c4f7065726174696f6e3e000000404163746976654f7065726174696f6e7304004001385665633c4f7065726174696f6e3e00010040436c6f7365644f7065726174696f6e7304004001385665633c4f7065726174696f6e3e0002003c537570706f7274656453746f636b73040028012c5665633c537472696e673e00030038436f6c6c656374656446756e647304002001107531323800040000400000024400440808696f244f7065726174696f6e00002801086964200110753132380001347469636b65725f73796d626f6c180118537472696e670001386f7065726174696f6e5f747970651c0110626f6f6c00013c6f7065726174696f6e5f73746174651c0110626f6f6c0001206c65766572616765200110753132380001246f70656e5f64617465180118537472696e67000128636c6f73655f64617465180118537472696e67000128696e766573746d656e74200110753132380001286f70656e5f707269636520011075313238000130636c6f7365645f7072696365200110753132380000";
    const metadata = ProgramMetadata.from(meta);

    const now = new Date();
    const currentDate = now.toISOString();

    const message = {
        destination: programID,
        payload: {
            CloseOperation: {
                operation_id: id,
                date: currentDate,
                close_price: close_price,
                vara_factor: vara_factor,
            },
        },
        gasLimit: 9999999245,
    };

    const signer = async () => {
        if (!account?.address) {
            alert.error("No account found");
            return;
        }

        if (!isApiReady) {
            alert.error("API not ready");
            return;
        }

        try {
        
            const extensions = await web3Enable("stockEx");
            if (extensions.length === 0) {
                alert.error("No wallet extension found");
                return;
            }

            const extrinsic = await api.message.send(message, metadata);
            const injector = await web3FromSource(account.meta.source);

            await extrinsic.signAndSend(
                account.address,
                { signer: injector.signer },
                ({ status }) => {
                    if (status.isInBlock) {
                        alert.success("Transaction included in block");
                    } else if (status.isFinalized) {
                        alert.success("Transaction finalized");
                    }
                }
            );
        } catch (error) {
            console.error("Transaction failed", error);
            alert.error("Transaction failed");
        }
    };

    return (
        <Flex align="center" justifyContent="center">
            <Button
                onClick={signer}
                borderRadius="full"
                paddingX="25px"
                paddingY="25px"
                fontSize="25px"
                isDisabled={isDisable}
                color="light"
                border="2px"
                borderColor="#02FDBF"
                _hover={{ bg: "#20c9a0" }}
            >
                Close
            </Button>
        </Flex>
    );
}

export { CloseOperation };